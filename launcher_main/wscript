#! /usr/bin/env python
# encoding: utf-8

from waflib import Utils
import os

top = '.'
PROJECT_NAME = 'hl2_launcher'

def options(opt):
	# stub
	return

def configure(conf):
	return

def build(bld):
	if bld.env.DEST_OS == 'android':
		return

	source = ['main.cpp']
	includes = ['../public']
	defines = []
	libs = []

	if bld.env.DEST_OS == 'psvita':
		libs += [ 'VRTLD', 'SDL2', 'UNWIND' ]
		# HACK: link in the entirety of libstdc++ so that dynamic libs could use all of it without manual exporting
		# also link in all the funky dependencies that aren't in SDL2's LDFLAGS
		bld.env.LDFLAGS += [
			'-Wl,--no-undefined',
			'-lcurl',
			'-lssl',
			'-lcrypto',
			'-Wl,--whole-archive',
			'-lstdc++',
			'-lfreetype',
			'-lbz2',
			'-lpng16',
			'-ljpeg',
			'-lopenal',
			'-lz',
			'-lpthread',
			'-Wl,--no-whole-archive',
			'-lm',
			'-lSDL2',
			'-lSceAudio_stub',
			'-lSceAudioIn_stub',
			'-lSceShaccCgExt',
			'-lkubridge_stub',
			'-ltaihen_stub',
			'-lSceShaccCg_stub',
			'-lSceKernelModulemgr_stub',
			'-lSceSblSsMgr_stub',
			'-lSceVshBridge_stub',
			'-lSceKernelDmacMgr_stub',
			'-Wl,--wrap,memcpy,--wrap,memset,--wrap,malloc,--wrap,memalign,--wrap,free,--wrap,calloc,--wrap,realloc'
		]
	elif bld.env.DEST_OS != 'win32':
		libs += [ 'DL', 'LOG' ]
	else:
		libs += ['USER32', 'SHELL32']
		source += ['launcher_main.rc']

	install_path = bld.env.BINDIR
	bld(
		source   = source,
		target   = PROJECT_NAME,
		name     = PROJECT_NAME,
		features = 'c cxx cxxprogram',
		includes = includes,
		defines  = defines,
		use      = libs,
		install_path = install_path,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = bld.get_taskgen_count(),
		sce_sys = 'psvita/sce_sys',
		title_id = 'HL2000001',
		app_name = 'Half-Life 2'
	)

